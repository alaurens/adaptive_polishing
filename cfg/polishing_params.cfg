#! /usr/bin/env python

PACKAGE='adaptive_polishing'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#       Name     Type    Level Description     	Default 	Min   	Max


gen.add("Wn",                double_t,    0,    				
	"Speed of the", 							 20,     	0, 		100		)
gen.add("fil_dx_lim" ,  double_t,    0,    				
	"Velcoity limit", 	   						 1,    		0, 		5		)
gen.add("fil_ddx_lim" ,   double_t,    0,    				    
	"Acc. limit", 	   						     5,     	0, 		10		)

gen.add("offset_x" ,   double_t,    0,    				    
 	"X of attractor.", 	   						0,     	-.5, 		.5		)
gen.add("offset_y" ,   double_t,    0,    				    
	"Y of attractor.", 	   						0,     	-.5, 		.5		)
gen.add("offset_z" ,   double_t,    0,    				    
	"Z of attractor.", 	   						0,     	-.5, 		.5		)

gen.add("radius_scale" ,   double_t,    0,    				    
	"scaling the radius",    	          	1,     	  0, 		 2		)

gen.add("Speed_offset" ,   double_t,    0,    				    
	"rotation speed",					0,      -1, 		 1			)

gen.add("ConvergenceSpeed" ,   double_t,    0,    				    
	"multiplier for convegence",					1,      0, 		 5		)

gen.add("vel_trimming" ,   double_t,    0,    				    
	"trimming the total velocity",					0.15,      0, 		 .3		)

gen.add("grad_descent_epsilon" ,   double_t,    0,    				    
	"trimming the total velocity",					0,      0, 		 0.001		)

gen.add("grad_descent_step" ,   double_t,    0,    				    
	"trimming the total velocity",					0,      0, 		 0.001		)

exit(gen.generate(PACKAGE, "adaptive_polishing", "polishing_params"))